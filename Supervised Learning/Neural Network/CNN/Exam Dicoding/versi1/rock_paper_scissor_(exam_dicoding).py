# -*- coding: utf-8 -*-
"""Rock Paper Scissor (Exam Dicoding).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18mu-wDvoqXkjO2tAKzhTNpZDikoGzFrm
"""

import tensorflow as tf
from tensorflow.keras.optimizers import RMSprop
from tensorflow.keras.preprocessing.image import ImageDataGenerator

!wget https://dicodingacademy.blob.core.windows.net/picodiploma/ml_pemula_academy/rockpaperscissors.zip \

import zipfile,os

local_zip = 'rockpaperscissors.zip'
zip_ref = zipfile.ZipFile(local_zip,'r')
zip_ref.extractall()
zip_ref.close()

basedir = 'rockpaperscissors/rps-cv-images'

os.listdir(basedir)

data_generator = ImageDataGenerator(
	rescale=1./225,
	rotation_range=20,
	horizontal_flip=True,
	shear_range=0.2,
	fill_mode='wrap',
	validation_split = 0.2
	)

train_generator = data_generator.flow_from_directory(
	basedir,
	target_size=(100,150),
	shuffle=True,
	subset='training'
	)

validation_generator = data_generator.flow_from_directory(
	basedir,
  target_size=(100,150),
	subset='validation'
	)

model = tf.keras.models.Sequential([
  tf.keras.layers.Conv2D(16,(3,3),activation='relu',input_shape=(100,150,3)),
  tf.keras.layers.MaxPooling2D(2,2),
  tf.keras.layers.Conv2D(32,(3,3),activation='relu'),
  tf.keras.layers.MaxPooling2D(2,2),
  tf.keras.layers.Conv2D(64,(3,3),activation='relu'),
  tf.keras.layers.MaxPooling2D(2,2),
  tf.keras.layers.Flatten(),
  tf.keras.layers.Dense(512,activation='relu'),
  tf.keras.layers.Dense(3,activation='softmax')
])

model.compile(loss='categorical_crossentropy',
              optimizer=tf.optimizers.Adam(),
              metrics=['accuracy'])

model.fit(
    train_generator,
    steps_per_epoch = 16,
    epochs=16,
    validation_data=validation_generator,
    validation_steps=4,
    verbose=2
)

